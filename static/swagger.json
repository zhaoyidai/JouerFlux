{
  "swagger": "2.0",
  "info": {
    "title": "JouerFlux API",
    "description": "API documentation for the JouerFlux application",
    "version": "1.0.0"
  },
  "schemes": [
    "http"
  ],
  "paths": {
    "/firewall": {
      "get": {
        "summary": "Get all firewalls",
        "security": [],
        "responses": {
          "200": {
            "description": "A list of firewalls",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Firewall"
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new firewall",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ip_address": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              },
              "required": ["ip_address","name"]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Firewall created"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "summary": "Register a new user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "role": {
                  "type": "string",
                  "default": "user"
                }
              },
              "required": ["username", "password"]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created"
          },
          "400": {
            "description": "Username and password are required"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login to get an access token",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              },
              "required": ["username", "password"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Access token",
            "schema": {
              "type": "object",
              "properties": {
                "access_token": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Invalid user or password"
          }
        }
      }
    },
    "/auth/role": {
      "get": {
        "summary": "Get the role of the logged-in user",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Role of the logged-in user",
            "schema": {
              "type": "object",
              "properties": {
                "logged_in_as": {
                  "type": "object",
                  "properties": {
                    "username": {
                      "type": "string"
                    },
                    "role": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/firewall/{id}": {
      "delete": {
        "summary": "Delete a firewall",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Firewall deleted"
          },
          "404": {
            "description": "Firewall not found"
          }

      }
    }
  },
    "/firewall/search": {
      "get": {
        "summary": "Search firewalls by IP address",
        "parameters": [
          {
            "name": "ip_address",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "A list of firewalls",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Firewall"
              }
            }
          },
          "400": {
            "description": "IP address is required to search"
          },
          "404": {
            "description": "No firewalls found for this IP address"
          }
        }
      }
    },
    "/policy": {
      "post": {
        "summary": "Create a new policy with or without a selected template",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "firewall_id": {
                  "type": "integer"
                },
                "template": {
                  "type": "string",
                  "enum": ["basic", "strict"]
                }
              },
              "required": ["name", "firewall_id"]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Policy created with the selected template"
          },
          "400": {
            "description": "Name and firewall ID cannot be empty or invalid template"
          },
          "404": {
            "description": "Firewall does not exist"
          }

      }
    }
    },
    "/policy/{id}": {
      "get": {
        "summary": "Get policies for a specific firewall",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "A list of policies",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Policy"
              }
            }
          },
          "400": {
            "description": "Firewall does not exist"
          },
          "404": {
            "description": "No policies found"
          }

      }
      },
      "delete": {
        "summary": "Delete a policy",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Policy deleted"
          },
          "404": {
            "description": "Policy not found"
          }

      }
    }
    },
    "/rules": {
      "get": {
        "summary": "Get all rules for a firewall with pagination",
        "parameters": [
          {
            "name": "firewall_id",
            "in": "query",
            "required": true,
            "type": "integer"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 1
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 10
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "A list of rules",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Rule"
              }
            }
          },
          "400": {
            "description": "Firewall ID is required"
          },
          "404": {
            "description": "No rules found"
          }

      }
    }
    },
    "/rule/{id}": {
      "get": {
        "summary": "Get all rules by a policy id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of Rules",
            "schema": {
              "type": "array",
              "$ref": "#/definitions/Rule"
            }
          },
          "400": {
            "description": "Policy does not exist"
          },
          "404": {
            "description": "No rules for this policy"
          }
        }
      },
      "put": {
        "summary": "Update an existing rule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "source": {
                  "type": "string"
                },
                "destination": {
                  "type": "string"
                },
                "action": {
                  "type": "string"
                }
              },
              "required": ["source", "destination", "action"]
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Rule updated",
            "schema": {
              "$ref": "#/definitions/Rule"
            }
          },
          "400": {
            "description": "Source, destination, and action are required"
          },
          "404": {
            "description": "Rule not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a rule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Rule deleted"
          },
          "404": {
            "description": "Rule not found"
          }

      }
    }
    }
    },

  "definitions": {
    "Firewall": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "ip_address": {
          "type": "string"
        }
      }
    },
    "Policy": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "firewall_id": {
          "type": "integer"
        }
      }
    },
    "Rule": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "source": {
          "type": "string"
        },
        "destination": {
          "type": "string"
        },
        "action": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}
